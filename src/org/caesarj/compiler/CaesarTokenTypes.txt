Caesar // output vocabulary

// Definitions from C:\dev\eclipse\workspace\Caesar\cc/caesar.t
LITERAL_abstract = "abstract" = 4
LITERAL_boolean = "boolean" = 5
LITERAL_break = "break" = 6
LITERAL_byte = "byte" = 7
LITERAL_case = "case" = 8
LITERAL_catch = "catch" = 9
LITERAL_char = "char" = 10
LITERAL_class = "class" = 11
LITERAL_const = "const" = 12
LITERAL_continue = "continue" = 13
LITERAL_default = "default" = 14
LITERAL_do = "do" = 15
LITERAL_double = "double" = 16
LITERAL_else = "else" = 17
LITERAL_extends = "extends" = 18
LITERAL_false = "false" = 19
LITERAL_final = "final" = 20
LITERAL_finally = "finally" = 21
LITERAL_float = "float" = 22
LITERAL_for = "for" = 23
LITERAL_goto = "goto" = 24
LITERAL_if = "if" = 25
LITERAL_implements = "implements" = 26
LITERAL_import = "import" = 27
LITERAL_instanceof = "instanceof" = 28
LITERAL_int = "int" = 29
LITERAL_interface = "interface" = 30
LITERAL_long = "long" = 31
LITERAL_native = "native" = 32
LITERAL_new = "new" = 33
LITERAL_null = "null" = 34
LITERAL_package = "package" = 35
LITERAL_private = "private" = 36
LITERAL_protected = "protected" = 37
LITERAL_public = "public" = 38
LITERAL_return = "return" = 39
LITERAL_short = "short" = 40
LITERAL_static = "static" = 41
LITERAL_strictfp = "strictfp" = 42
LITERAL_super = "super" = 43
LITERAL_switch = "switch" = 44
LITERAL_synchronized = "synchronized" = 45
LITERAL_this = "this" = 46
LITERAL_throw = "throw" = 47
LITERAL_throws = "throws" = 48
LITERAL_transient = "transient" = 49
LITERAL_true = "true" = 50
LITERAL_try = "try" = 51
LITERAL_void = "void" = 52
LITERAL_volatile = "volatile" = 53
LITERAL_while = "while" = 54
LITERAL_cclass = "cclass" = 55
LITERAL_collaboration = "collaboration" = 56
LITERAL_provided = "provided" = 57
LITERAL_expected = "expected" = 58
LITERAL_binds = "binds" = 59
LITERAL_provides = "provides" = 60
LITERAL_wraps = "wraps" = 61
LITERAL_wrappee = "wrappee" = 62
WDESTRUCTOR("~") = 63
PATHMARKER("#") = 64
LITERAL_after = "after" = 65
LITERAL_around = "around" = 66
LITERAL_before = "before" = 67
LITERAL_declare = "declare" = 68
LITERAL_deploy = "deploy" = 69
LITERAL_deployed = "deployed" = 70
LITERAL_pointcut = "pointcut" = 71
LITERAL_precedence = "precedence" = 72
LITERAL_privileged = "privileged" = 73
LITERAL_returning = "returning" = 74
LITERAL_throwing = "throwing" = 75
ASSIGN("=") = 76
BAND("&") = 77
BAND_ASSIGN("&=") = 78
BNOT("~") = 79
BOR("|") = 80
BOR_ASSIGN("|=") = 81
BSR(">>>") = 82
BSR_ASSIGN(">>>=") = 83
BXOR("^") = 84
BXOR_ASSIGN("^=") = 85
COLON(":") = 86
COMMA(",") = 87
DEC("--") = 88
DOT(".") = 89
EQUAL("==") = 90
GE(">=") = 91
GT(">") = 92
INC("++") = 93
LAND("&&") = 94
LBRACK("[") = 95
LCURLY("{") = 96
LE("<=") = 97
LNOT("!") = 98
LOR("||") = 99
LPAREN("(") = 100
LT("<") = 101
MINUS("-") = 102
MINUS_ASSIGN("-=") = 103
NOT_EQUAL("!=") = 104
PERCENT("%") = 105
PERCENT_ASSIGN("%=") = 106
PLUS("+") = 107
PLUS_ASSIGN("+=") = 108
QUESTION("?") = 109
RBRACK("]") = 110
RCURLY("}") = 111
RPAREN(")") = 112
SEMI(";") = 113
SL("<<") = 114
SLASH("/") = 115
SLASH_ASSIGN("/=") = 116
SL_ASSIGN("<<=") = 117
SR(">>") = 118
SR_ASSIGN(">>=") = 119
STAR("*") = 120
STAR_ASSIGN("*=") = 121
CHARACTER_LITERAL("a character literal (inside simple quote)") = 122
IDENT("an identifier") = 123
INTEGER_LITERAL("an integer literal") = 124
REAL_LITERAL("a real literal") = 125
STRING_LITERAL("a string literal (inside double quote)") = 126
TYPE_PATTERN("a type pattern for pointcut definition") = 127
