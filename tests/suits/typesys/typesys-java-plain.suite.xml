<testsuite name="Test plain java type checker" package="suits.typesystem.plainjava">

	<common-code-base>		
		public cclass G {
			public cclass N {}
		}
	</common-code-base>


	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile id="binary001" description="Test type checks on binary types.">
        <code>
			public cclass A {
				private String s[] = new String[1];
				public void foo() {
					s[0] = "x";
				}
			}
		</code>
    </compile>

	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile id="binary002" description="Test type checks on binary types.">
        <code>
			public cclass A {
				private String s;
				public void foo() {
					s = "x";
				}
			}
		</code>
    </compile>

	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile id="binary003" description="Test type checks on method calls defined in super.">
        <code>
			import javax.swing.*;

			public class A extends JPanel {
				public void foo() {
					this.getWidth();
				}
			}
		</code>
    </compile>

	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile id="binary004" description="Test type checks on method calls defined in super.">
        <code>
			public class A {
				public void foo() {
					System.out.println();
				}
			}
		</code>
    </compile>

	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile id="static001" description="Check initializer of static fields.">
        <code>
			public cclass A {
			}
			public class B {
				static A a = new A();
			}
		</code>
    </compile>

	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile id="static002" description="Check initializer of static fields.">
        <code>
			public cclass A {
				public static A a = new A();
			}
		</code>
    </compile>

	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile id="accessor001" description="Check accessor methods.">
        <code>
			public class A {
				private Object o = new Object();
				public void foo() {
					new Runnable() {
						public void run() {
							o.toString();
						}
					}.run();
				}
			}
		</code>
    </compile>	

	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile id="accessor002" description="Check accessors.">
        <code>
			public class HierarchicalLayoutStrategy {
			    private NodeTree nodeTree = new NodeTree();
			
			    private class NodeTree {			
			        private TreeElement root;
			
			        private void removeNode() {
			            TreeElement t = null;
		                t.parent.children.remove(t);
			        }
			
			        private class TreeElement {		
			        	private TreeElement parent;	
			            private java.util.List children;
			        }			
			    }						    
			}
		</code>
    </compile>	

</testsuite>
