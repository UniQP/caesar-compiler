<testsuite name="Test program text based pointcuts" package="suits.pointcuts.text">

	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile-run  id="pointcuttext001" description="within">
    	<test>
    		Main m = new Main();
    		m.run();
    		
			System.out.println("result: "+ res.toString());
			assertEquals(":before:m:m:beforeGet:true", res.toString());			
		</test>
        <code>
        	public cclass Main {
        	
        		public void run() {
        			ClsB b = new ClsB();
        			b.m();
        			if (ClsB.var) {
	        			Test.res.append(":true");
        			}
        		}
        	}
        	
        	public deployed cclass ClsA {

        		before(): call(* ClsB.m(..)) &amp;&amp; within(Main) {
					Test.res.append(":before");
					new ClsB().m();
				}
				before() : get(boolean ClsB.*) &amp;&amp; within(Main) {
					Test.res.append(":beforeGet");
					System.out.println(thisJoinPoint.getThis() + " - " + thisJoinPoint.getStaticPart());
				}
        	}
			
			public cclass ClsB {

				public static boolean var = true;

				public void m() {
					Test.res.append(":m");
				}

			}
        </code>
    </compile-run>
   
   	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile-run  id="pointcuttext002" description="withincode with method">
    	<test>
    		Main m = new Main();
    		m.run();
    		
			System.out.println("result: "+ res.toString());
			assertEquals(":before:m:m", res.toString());			
		</test>
        <code>
        	public cclass Main {
        	
        		public void run() {
        			ClsB b = new ClsB();
        			b.m();
        		}
        	}
        	
        	public deployed cclass ClsA {

        		before(): call(* ClsB.m(..)) &amp;&amp; withincode(* Main.run()) {
					Test.res.append(":before");
					new ClsB().m();
				}
        	}
			
			public cclass ClsB {

				public void m() {
					Test.res.append(":m");
				}

			}
        </code>
    </compile-run>

   	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile-run  id="pointcuttext003" description="withincode with constructor">
    	<test>
    		Main m = new Main();
    		m.run();
    		
			System.out.println("result: "+ res.toString());
			assertEquals(":before:construct:run", res.toString());			
		</test>
        <code>
        	public cclass Main {
        	
        		public void run() {
        			ClsB b = new ClsB();
        			b.m(":run");
        		}
        	}
        	
        	public deployed cclass ClsA {
        		// should be:
        		//before(): call(* ClsB.m(..)) &amp;&amp; withincode(public ClsB.new()) {
        		before(): call(* ClsB.m(..)) &amp;&amp; withincode(public * ClsB.$constructor()) {
					Test.res.append(":before");
				}
        	}
			
			public cclass ClsB {
	
				public ClsB() {
					this.m(":construct");
				}
				
				public void m(String s) {
					Test.res.append(s);
				}

			}
        </code>
    </compile-run>
</testsuite>
