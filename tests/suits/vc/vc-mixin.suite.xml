<testsuite name="Test relationships between Caesar classes" package="suits.vc.mixin">

	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile-check-error error="CLASS_CIRCULARITY"  id="vcmixin001" description="outer inheritance cycle">
        <code>
        	public class X {
			    public X(String p1, int p2) {}
			}
			
			public cclass A extends B {}
			
			public cclass B extends C &amp; D {}
			
			public cclass C extends A {}
			
			public cclass D extends A {}
        </code>
    </compile-check-error>

	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile-check-error error="CLASS_CIRCULARITY"  id="vcmixin002" description="inner inheritance cycle through different branches of mixin combination">
        <code>
        	public cclass OuterA {
				public cclass InnerA {
				}
				public cclass InnerB {
				}
			}
			public cclass OuterB extends OuterA {
				public cclass InnerA {
				}
				public cclass InnerB extends InnerA {
				}
			}
			public cclass OuterC extends OuterA {
				public cclass InnerB {
				}
				public cclass InnerA extends InnerB {
				}
			}
			public cclass OuterD extends OuterB &amp; OuterC {
			}
        </code>
    </compile-check-error>
	
	<!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile-check-error error="CCLASS_UNKNOWN"  id="vcmixin003" description="mixing classes">
        <code>
        	public class ClassA {
			}
			public class ClassB {
			}
			public cclass CclassA extends ClassA &amp; ClassB {
			}
        </code>
    </compile-check-error>
    
    <!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile id="vcmixin004" description="repeated mixing">
        <code>
        	public cclass OuterA {
				public cclass InnerA {
				}
				public cclass InnerB extends InnerA &amp; InnerA {
				}
			}
        </code>
    </compile>
    
    <!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile-check-error error="CCLASS_UNKNOWN"  id="vcmixin005" description="mixing outer with inner">
        <code>
        	public cclass OuterA {
				public cclass InnerA {
				}
			}
			public cclass OuterB extends OuterA &amp; OuterA.InnerA {
			}
        </code>
    </compile-check-error>
    
    <!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile-check-error error="CCLASS_UNKNOWN"  id="vcmixin006" description="mixing interfaces">
        <code>
        	public interface IfcA {
			}
			public interface IfcB {
			}
			public cclass ClassA extends IfcA &amp; IfcB {
			}
        </code>
    </compile-check-error>
    
    <!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile id="vcmixin007" description="changing mixing order">
        <code>
        	public cclass OuterA {
				public cclass InnerA {
				}
				public cclass InnerB {
				}
				public cclass InnerC {
				}
			}
			public cclass OuterB extends OuterA {
			    public cclass InnerA {}
			    public cclass InnerB {}
				public cclass InnerC extends InnerA &amp; InnerB {
				}
			}
			public cclass OuterC extends OuterA {
			    public cclass InnerA {}
			    public cclass InnerB {}
			    public cclass InnerC extends InnerB &amp; InnerA {
				}
			}
			public cclass OuterD extends OuterB &amp; OuterC {}
        </code>
    </compile>
    
    <!-- *=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~=*=~~= -->
    <compile id="vcmixin008" description="mixing conflicting sequences">
        <code>
        	public cclass OuterA {
			}
			public cclass OuterB {
			}
			public cclass OuterC extends OuterB &amp; OuterA {
			}
			public cclass OuterD extends OuterA &amp; OuterB {
			}
			public cclass OuterE extends OuterC &amp; OuterD {
			}			
        </code>
    </compile>
	    
</testsuite>
