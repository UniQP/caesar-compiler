<testsuite name="cclass constructors" package="suits.vc.constr">
	
	<common-code-base> 
		public cclass GraphLib{ public cclass Node{} }
	</common-code-base>

	<compile-check-error error="CONSTRUCTOR_NOTFOUND"
		description="Need explicit super" 
		id="vcconstr000">
		
		<code>
			public class X{
				public X(int i){
				}
			}
			
			public class Y extends X{
				public Y(String s){
				}
			}
		</code>
			
		
	</compile-check-error>
		
	<compile-check-error 
			description="Using undefined constructor" 
			error="METHOD_NOT_FOUND"
			id="vcconstr001">
		<code>
			public cclass X{
				public X(int i){ 
				}
			}
			
			public class Main{
			 public static void main(String[] args){
				new X();
			 }
			}
		</code>
	</compile-check-error>

	<compile-run
			description="initializing final field in cclass-constructor"
			id="vcconstr002">
		<test>
			GraphLib graph = new GraphLib();
			X x = new X(graph);
			x.foo();
		</test>
		<code>
			public cclass X{
				public final GraphLib g; 
			
				public X(GraphLib graph)
				{ 
					g = graph; 
				}
			
				public void foo(){ 
					g.Node node = g.new Node(); 
				}
			}
		</code>
	</compile-run>

	<compile-run description="super constructor" id="vcconstr003">
		<test>
			assertEquals(42, new Y(42).i);
		</test>
		<code>
			public cclass X{
				public int i;
				public X(int i){
					this.i = i;
				}
			}
			
			public cclass Y extends  X  {
				public Y(int i){
					super( i );
					System.out.println("Test");
				}
			}
		</code>
	</compile-run>	

</testsuite>
